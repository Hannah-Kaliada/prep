//1. Методом слияния в дин. матрице N×M отсортировать элементы k-той строки. Без доп.массива
//2. В дин.массиве строк в m-ой строке удалить k-тое слово
//
//  main.c
//  prep
//
//  Created by Hanna Kaliada on 17.01.23.
//
//Отсортировать четные элементы матрицы
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
int str_length(const int* str)
{
    return (*str) ? str_length(++str) + 1 : 0;
}
void merge_sort(int* a, int l, int r)
{
    int m = (l + r) / 2;
    if (l == r)
        return;
    merge_sort(a, l, m);
    merge_sort(a, m + 1, r);
    int i = l, j = m + 1, k = 0;
    int* b;
    b = (int*)malloc((r - l + 1) * sizeof(int));
    while (i <= m && j <= r)
    {
        if (a[j] < a[i])
        {
            b[k] = a[j];
            j++;
            k++;
        }
        else
        {
            b[k] = a[i];
            i++;
            k++;
        }
    }
    for (; i <= m; i++, k++)
        b[k] = a[i];
    for (; j <= r; j++, k++)
        b[k] = a[j];
    for (i = l, k = 0; i <= r; i++, k++)
        a[i] = b[k];
}
void task1(int **X, int k)
{
    int b = str_length(X[k]);
    merge_sort(X[k], 0, b);
}
int main()
{
    srand((int)time(NULL));
    int N=7;
    int M=7;
    int k=1;
    //N- строки M- столбцы
    int **a;
    a = (int**)malloc(N * sizeof(int*));
    for (int i = 0; i<N; i++)
    {
        a[i] = (int*)malloc(M * sizeof(int));
    }
    for (int i=0; i<N; i++)
        for (int j=0; j<M; j++)
            a[i][j] = (rand() % 10)-rand()%12;
    for (int i=0; i<N; i++)
    {
        for (int j=0; j<M; j++)
        printf("%d\t",  a[i][j]);
        printf("\n");
    }
    task1(a, k);
    puts("New mas:\n");
    for (int i=0; i<N; i++)
    {
        for (int j=0; j<M; j++)
        printf("%d\t",  a[i][j]);
        printf("\n");
    }
    return 0;
}
